// This file is auto-generated by @hey-api/openapi-ts

/**
 * AudioMetadataResponse
 * Response model for audio metadata.
 */
export type AudioMetadataResponse = {
    /**
     * Job Id
     */
    job_id: string;
    /**
     * Title
     */
    title: string;
    status: JobStatus;
    /**
     * Format
     */
    format: string;
    /**
     * Duration
     */
    duration?: number | null;
    /**
     * File Size
     */
    file_size?: number | null;
    /**
     * Created At
     */
    created_at?: string | null;
    /**
     * Completed At
     */
    completed_at?: string | null;
    /**
     * Chapters
     */
    chapters?: Array<{
        [key: string]: unknown;
    }>;
    /**
     * Resume Position
     */
    resume_position?: number;
    /**
     * Percentage Complete
     */
    percentage_complete?: number;
    /**
     * Last Played At
     */
    last_played_at?: string | null;
    /**
     * Current Chapter Id
     */
    current_chapter_id?: string | null;
    /**
     * Current Chapter Position
     */
    current_chapter_position?: number;
};

/**
 * CreateJobRequest
 * Request model for creating a job.
 */
export type CreateJobRequest = {
    /**
     * Title
     * Job title
     */
    title: string;
    /**
     * Description
     * Job description
     */
    description?: string | null;
    /**
     * Content
     * Text content
     */
    content?: string | null;
    /**
     * File Key
     * File key for uploaded text file
     */
    file_key?: string | null;
    /**
     * Type of job to create
     */
    job_type?: JobType;
    /**
     * Voice configuration
     */
    voice_config?: VoiceConfig | null;
    /**
     * Processing Mode
     * Processing mode for book chapters
     */
    processing_mode?: string;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * JobListResponse
 * Response model for paginated job lists.
 */
export type JobListResponse = {
    /**
     * Jobs
     */
    jobs: Array<JobResponse>;
    /**
     * Total
     */
    total: number;
    /**
     * Page
     */
    page: number;
    /**
     * Page Size
     */
    page_size: number;
    /**
     * Total Pages
     */
    total_pages: number;
};

/**
 * JobResponse
 * Response model for text-to-audio jobs.
 */
export type JobResponse = {
    /**
     * Id
     */
    id: string;
    /**
     * User Id
     */
    user_id: string;
    /**
     * Title
     */
    title: string;
    /**
     * Description
     */
    description?: string | null;
    status: JobStatus;
    /**
     * Progress
     */
    progress: number;
    /**
     * Error Message
     */
    error_message?: string | null;
    /**
     * Config
     */
    config?: {
        [key: string]: unknown;
    } | null;
    /**
     * Result Data
     */
    result_data?: {
        [key: string]: unknown;
    } | null;
    /**
     * Input File Key
     */
    input_file_key?: string | null;
    /**
     * Output File Key
     */
    output_file_key?: string | null;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
    /**
     * Started At
     */
    started_at?: string | null;
    /**
     * Completed At
     */
    completed_at?: string | null;
    /**
     * Duration
     */
    duration?: number | null;
    /**
     * Steps
     */
    steps?: Array<JobStepResponse>;
};

/**
 * JobStatus
 * Job processing states.
 */
export type JobStatus = 'PENDING' | 'PROCESSING' | 'COMPLETED' | 'FAILED' | 'CANCELLED';

/**
 * JobStepResponse
 * Response model for job steps.
 */
export type JobStepResponse = {
    /**
     * Id
     */
    id: string;
    /**
     * Step Name
     */
    step_name: string;
    /**
     * Step Order
     */
    step_order: number;
    status: StepStatus;
    /**
     * Progress
     */
    progress: number;
    /**
     * Error Message
     */
    error_message?: string | null;
    /**
     * Step Metadata
     */
    step_metadata?: {
        [key: string]: unknown;
    } | null;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
    /**
     * Started At
     */
    started_at?: string | null;
    /**
     * Completed At
     */
    completed_at?: string | null;
    /**
     * Duration
     */
    duration?: number | null;
};

/**
 * JobType
 * Types of jobs that can be processed.
 */
export type JobType = 'text_to_audio' | 'book_processing' | 'chapter_multi_voice';

/**
 * PlaybackProgressResponse
 * Response model for playback progress.
 */
export type PlaybackProgressResponse = {
    /**
     * Id
     */
    id: string;
    /**
     * User Id
     */
    user_id: string;
    /**
     * Job Id
     */
    job_id: string;
    /**
     * Position Seconds
     */
    position_seconds: number;
    /**
     * Duration Seconds
     */
    duration_seconds?: number | null;
    /**
     * Percentage Complete
     */
    percentage_complete: number;
    /**
     * Current Chapter Id
     */
    current_chapter_id?: string | null;
    /**
     * Current Chapter Position
     */
    current_chapter_position: number;
    /**
     * Is Completed
     */
    is_completed: boolean;
    /**
     * Last Played At
     */
    last_played_at: string;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
};

/**
 * ResumeInfoResponse
 * Response model for resume information.
 */
export type ResumeInfoResponse = {
    /**
     * Has Progress
     */
    has_progress: boolean;
    /**
     * Resume Position
     */
    resume_position?: number;
    /**
     * Percentage Complete
     */
    percentage_complete?: number;
    /**
     * Last Played At
     */
    last_played_at?: string | null;
    /**
     * Current Chapter Id
     */
    current_chapter_id?: string | null;
    /**
     * Current Chapter Position
     */
    current_chapter_position?: number;
};

/**
 * StepStatus
 * Individual step processing states.
 */
export type StepStatus = 'PENDING' | 'RUNNING' | 'COMPLETED' | 'FAILED';

/**
 * StreamingUrlResponse
 * Response model for audio streaming URLs.
 */
export type StreamingUrlResponse = {
    /**
     * Streaming Url
     * Pre-signed URL for streaming audio
     */
    streaming_url: string;
    /**
     * Expires At
     * ISO timestamp when URL expires
     */
    expires_at: string;
    /**
     * File Key
     * Storage key for the audio file
     */
    file_key: string;
    /**
     * Content Type
     * MIME type of the audio file
     */
    content_type: string;
    /**
     * Resume information for the user
     */
    resume_info: ResumeInfoResponse;
    /**
     * Source Job Id
     * ID of the child job that provided the audio
     */
    source_job_id?: string | null;
};

/**
 * Token
 */
export type Token = {
    /**
     * Access Token
     */
    access_token: string;
    /**
     * Token Type
     */
    token_type: string;
};

/**
 * UpdateProgressRequest
 * Request model for updating playback progress.
 */
export type UpdateProgressRequest = {
    /**
     * Position Seconds
     * Current playback position in seconds
     */
    position_seconds: number;
    /**
     * Duration Seconds
     * Total audio duration in seconds
     */
    duration_seconds?: number | null;
    /**
     * Current Chapter Id
     * Current chapter ID for multi-chapter books
     */
    current_chapter_id?: string | null;
    /**
     * Current Chapter Position
     * Position within current chapter
     */
    current_chapter_position?: number;
};

/**
 * UserCreate
 */
export type UserCreate = {
    /**
     * Email
     */
    email: string;
    /**
     * Password
     */
    password: string;
};

/**
 * UserLogin
 */
export type UserLogin = {
    /**
     * Email
     */
    email: string;
    /**
     * Password
     */
    password: string;
};

/**
 * UserResponse
 */
export type UserResponse = {
    /**
     * Id
     */
    id: string;
    /**
     * Email
     */
    email: string;
    /**
     * Created At
     */
    created_at: string;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

/**
 * VoiceConfig
 * Voice configuration for TTS generation.
 */
export type VoiceConfig = {
    /**
     * Provider
     * TTS provider (openai, elevenlabs)
     */
    provider: string;
    /**
     * Voice Id
     * Specific voice ID
     */
    voice_id?: string | null;
    /**
     * Voice Settings
     * Provider-specific voice settings
     */
    voice_settings?: {
        [key: string]: string;
    };
};

export type RegisterApiV1AuthRegisterPostData = {
    body: UserCreate;
    path?: never;
    query?: never;
    url: '/api/v1/auth/register';
};

export type RegisterApiV1AuthRegisterPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RegisterApiV1AuthRegisterPostError = RegisterApiV1AuthRegisterPostErrors[keyof RegisterApiV1AuthRegisterPostErrors];

export type RegisterApiV1AuthRegisterPostResponses = {
    /**
     * Successful Response
     */
    200: UserResponse;
};

export type RegisterApiV1AuthRegisterPostResponse = RegisterApiV1AuthRegisterPostResponses[keyof RegisterApiV1AuthRegisterPostResponses];

export type LoginApiV1AuthLoginPostData = {
    body: UserLogin;
    path?: never;
    query?: never;
    url: '/api/v1/auth/login';
};

export type LoginApiV1AuthLoginPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoginApiV1AuthLoginPostError = LoginApiV1AuthLoginPostErrors[keyof LoginApiV1AuthLoginPostErrors];

export type LoginApiV1AuthLoginPostResponses = {
    /**
     * Successful Response
     */
    200: Token;
};

export type LoginApiV1AuthLoginPostResponse = LoginApiV1AuthLoginPostResponses[keyof LoginApiV1AuthLoginPostResponses];

export type GetMeApiV1AuthMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/auth/me';
};

export type GetMeApiV1AuthMeGetResponses = {
    /**
     * Successful Response
     */
    200: UserResponse;
};

export type GetMeApiV1AuthMeGetResponse = GetMeApiV1AuthMeGetResponses[keyof GetMeApiV1AuthMeGetResponses];

export type ListJobsApiV1JobsGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Page
         * Page number
         */
        page?: number;
        /**
         * Page Size
         * Items per page
         */
        page_size?: number;
        /**
         * Status
         * Filter by job status
         */
        status?: JobStatus | null;
    };
    url: '/api/v1/jobs';
};

export type ListJobsApiV1JobsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListJobsApiV1JobsGetError = ListJobsApiV1JobsGetErrors[keyof ListJobsApiV1JobsGetErrors];

export type ListJobsApiV1JobsGetResponses = {
    /**
     * Successful Response
     */
    200: JobListResponse;
};

export type ListJobsApiV1JobsGetResponse = ListJobsApiV1JobsGetResponses[keyof ListJobsApiV1JobsGetResponses];

export type CreateJobApiV1JobsPostData = {
    body: CreateJobRequest;
    path?: never;
    query?: never;
    url: '/api/v1/jobs';
};

export type CreateJobApiV1JobsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateJobApiV1JobsPostError = CreateJobApiV1JobsPostErrors[keyof CreateJobApiV1JobsPostErrors];

export type CreateJobApiV1JobsPostResponses = {
    /**
     * Successful Response
     */
    200: JobResponse;
};

export type CreateJobApiV1JobsPostResponse = CreateJobApiV1JobsPostResponses[keyof CreateJobApiV1JobsPostResponses];

export type CancelJobApiV1JobsJobIdDeleteData = {
    body?: never;
    path: {
        /**
         * Job Id
         */
        job_id: string;
    };
    query?: never;
    url: '/api/v1/jobs/{job_id}';
};

export type CancelJobApiV1JobsJobIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CancelJobApiV1JobsJobIdDeleteError = CancelJobApiV1JobsJobIdDeleteErrors[keyof CancelJobApiV1JobsJobIdDeleteErrors];

export type CancelJobApiV1JobsJobIdDeleteResponses = {
    /**
     * Response Cancel Job Api V1 Jobs  Job Id  Delete
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type CancelJobApiV1JobsJobIdDeleteResponse = CancelJobApiV1JobsJobIdDeleteResponses[keyof CancelJobApiV1JobsJobIdDeleteResponses];

export type GetJobApiV1JobsJobIdGetData = {
    body?: never;
    path: {
        /**
         * Job Id
         */
        job_id: string;
    };
    query?: never;
    url: '/api/v1/jobs/{job_id}';
};

export type GetJobApiV1JobsJobIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetJobApiV1JobsJobIdGetError = GetJobApiV1JobsJobIdGetErrors[keyof GetJobApiV1JobsJobIdGetErrors];

export type GetJobApiV1JobsJobIdGetResponses = {
    /**
     * Successful Response
     */
    200: JobResponse;
};

export type GetJobApiV1JobsJobIdGetResponse = GetJobApiV1JobsJobIdGetResponses[keyof GetJobApiV1JobsJobIdGetResponses];

export type GetJobStepsApiV1JobsJobIdStepsGetData = {
    body?: never;
    path: {
        /**
         * Job Id
         */
        job_id: string;
    };
    query?: never;
    url: '/api/v1/jobs/{job_id}/steps';
};

export type GetJobStepsApiV1JobsJobIdStepsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetJobStepsApiV1JobsJobIdStepsGetError = GetJobStepsApiV1JobsJobIdStepsGetErrors[keyof GetJobStepsApiV1JobsJobIdStepsGetErrors];

export type GetJobStepsApiV1JobsJobIdStepsGetResponses = {
    /**
     * Response Get Job Steps Api V1 Jobs  Job Id  Steps Get
     * Successful Response
     */
    200: Array<JobStepResponse>;
};

export type GetJobStepsApiV1JobsJobIdStepsGetResponse = GetJobStepsApiV1JobsJobIdStepsGetResponses[keyof GetJobStepsApiV1JobsJobIdStepsGetResponses];

export type GetJobAudioApiV1JobsJobIdAudioGetData = {
    body?: never;
    path: {
        /**
         * Job Id
         */
        job_id: string;
    };
    query?: never;
    url: '/api/v1/jobs/{job_id}/audio';
};

export type GetJobAudioApiV1JobsJobIdAudioGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetJobAudioApiV1JobsJobIdAudioGetError = GetJobAudioApiV1JobsJobIdAudioGetErrors[keyof GetJobAudioApiV1JobsJobIdAudioGetErrors];

export type GetJobAudioApiV1JobsJobIdAudioGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetBookChaptersApiV1JobsJobIdChaptersGetData = {
    body?: never;
    path: {
        /**
         * Job Id
         */
        job_id: string;
    };
    query?: never;
    url: '/api/v1/jobs/{job_id}/chapters';
};

export type GetBookChaptersApiV1JobsJobIdChaptersGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetBookChaptersApiV1JobsJobIdChaptersGetError = GetBookChaptersApiV1JobsJobIdChaptersGetErrors[keyof GetBookChaptersApiV1JobsJobIdChaptersGetErrors];

export type GetBookChaptersApiV1JobsJobIdChaptersGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetStreamingUrlApiV1AudioJobIdStreamGetData = {
    body?: never;
    path: {
        /**
         * Job Id
         */
        job_id: string;
    };
    query?: never;
    url: '/api/v1/audio/{job_id}/stream';
};

export type GetStreamingUrlApiV1AudioJobIdStreamGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetStreamingUrlApiV1AudioJobIdStreamGetError = GetStreamingUrlApiV1AudioJobIdStreamGetErrors[keyof GetStreamingUrlApiV1AudioJobIdStreamGetErrors];

export type GetStreamingUrlApiV1AudioJobIdStreamGetResponses = {
    /**
     * Successful Response
     */
    200: StreamingUrlResponse;
};

export type GetStreamingUrlApiV1AudioJobIdStreamGetResponse = GetStreamingUrlApiV1AudioJobIdStreamGetResponses[keyof GetStreamingUrlApiV1AudioJobIdStreamGetResponses];

export type GetAudioMetadataApiV1AudioJobIdMetadataGetData = {
    body?: never;
    path: {
        /**
         * Job Id
         */
        job_id: string;
    };
    query?: never;
    url: '/api/v1/audio/{job_id}/metadata';
};

export type GetAudioMetadataApiV1AudioJobIdMetadataGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAudioMetadataApiV1AudioJobIdMetadataGetError = GetAudioMetadataApiV1AudioJobIdMetadataGetErrors[keyof GetAudioMetadataApiV1AudioJobIdMetadataGetErrors];

export type GetAudioMetadataApiV1AudioJobIdMetadataGetResponses = {
    /**
     * Successful Response
     */
    200: AudioMetadataResponse;
};

export type GetAudioMetadataApiV1AudioJobIdMetadataGetResponse = GetAudioMetadataApiV1AudioJobIdMetadataGetResponses[keyof GetAudioMetadataApiV1AudioJobIdMetadataGetResponses];

export type GetPlaylistApiV1AudioJobIdPlaylistGetData = {
    body?: never;
    path: {
        /**
         * Job Id
         */
        job_id: string;
    };
    query?: never;
    url: '/api/v1/audio/{job_id}/playlist';
};

export type GetPlaylistApiV1AudioJobIdPlaylistGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetPlaylistApiV1AudioJobIdPlaylistGetError = GetPlaylistApiV1AudioJobIdPlaylistGetErrors[keyof GetPlaylistApiV1AudioJobIdPlaylistGetErrors];

export type GetPlaylistApiV1AudioJobIdPlaylistGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ResetProgressApiV1ProgressJobIdDeleteData = {
    body?: never;
    path: {
        /**
         * Job Id
         */
        job_id: string;
    };
    query?: never;
    url: '/api/v1/progress/{job_id}';
};

export type ResetProgressApiV1ProgressJobIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ResetProgressApiV1ProgressJobIdDeleteError = ResetProgressApiV1ProgressJobIdDeleteErrors[keyof ResetProgressApiV1ProgressJobIdDeleteErrors];

export type ResetProgressApiV1ProgressJobIdDeleteResponses = {
    /**
     * Response Reset Progress Api V1 Progress  Job Id  Delete
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type ResetProgressApiV1ProgressJobIdDeleteResponse = ResetProgressApiV1ProgressJobIdDeleteResponses[keyof ResetProgressApiV1ProgressJobIdDeleteResponses];

export type GetProgressApiV1ProgressJobIdGetData = {
    body?: never;
    path: {
        /**
         * Job Id
         */
        job_id: string;
    };
    query?: never;
    url: '/api/v1/progress/{job_id}';
};

export type GetProgressApiV1ProgressJobIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetProgressApiV1ProgressJobIdGetError = GetProgressApiV1ProgressJobIdGetErrors[keyof GetProgressApiV1ProgressJobIdGetErrors];

export type GetProgressApiV1ProgressJobIdGetResponses = {
    /**
     * Response Get Progress Api V1 Progress  Job Id  Get
     * Successful Response
     */
    200: PlaybackProgressResponse | null;
};

export type GetProgressApiV1ProgressJobIdGetResponse = GetProgressApiV1ProgressJobIdGetResponses[keyof GetProgressApiV1ProgressJobIdGetResponses];

export type UpdateProgressApiV1ProgressJobIdPutData = {
    body: UpdateProgressRequest;
    path: {
        /**
         * Job Id
         */
        job_id: string;
    };
    query?: never;
    url: '/api/v1/progress/{job_id}';
};

export type UpdateProgressApiV1ProgressJobIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateProgressApiV1ProgressJobIdPutError = UpdateProgressApiV1ProgressJobIdPutErrors[keyof UpdateProgressApiV1ProgressJobIdPutErrors];

export type UpdateProgressApiV1ProgressJobIdPutResponses = {
    /**
     * Successful Response
     */
    200: PlaybackProgressResponse;
};

export type UpdateProgressApiV1ProgressJobIdPutResponse = UpdateProgressApiV1ProgressJobIdPutResponses[keyof UpdateProgressApiV1ProgressJobIdPutResponses];

export type GetResumeInfoApiV1ProgressJobIdResumeGetData = {
    body?: never;
    path: {
        /**
         * Job Id
         */
        job_id: string;
    };
    query?: never;
    url: '/api/v1/progress/{job_id}/resume';
};

export type GetResumeInfoApiV1ProgressJobIdResumeGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetResumeInfoApiV1ProgressJobIdResumeGetError = GetResumeInfoApiV1ProgressJobIdResumeGetErrors[keyof GetResumeInfoApiV1ProgressJobIdResumeGetErrors];

export type GetResumeInfoApiV1ProgressJobIdResumeGetResponses = {
    /**
     * Successful Response
     */
    200: ResumeInfoResponse;
};

export type GetResumeInfoApiV1ProgressJobIdResumeGetResponse = GetResumeInfoApiV1ProgressJobIdResumeGetResponses[keyof GetResumeInfoApiV1ProgressJobIdResumeGetResponses];

export type GetRecentProgressApiV1ProgressUserRecentGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/api/v1/progress/user/recent';
};

export type GetRecentProgressApiV1ProgressUserRecentGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRecentProgressApiV1ProgressUserRecentGetError = GetRecentProgressApiV1ProgressUserRecentGetErrors[keyof GetRecentProgressApiV1ProgressUserRecentGetErrors];

export type GetRecentProgressApiV1ProgressUserRecentGetResponses = {
    /**
     * Response Get Recent Progress Api V1 Progress User Recent Get
     * Successful Response
     */
    200: Array<PlaybackProgressResponse>;
};

export type GetRecentProgressApiV1ProgressUserRecentGetResponse = GetRecentProgressApiV1ProgressUserRecentGetResponses[keyof GetRecentProgressApiV1ProgressUserRecentGetResponses];

export type ViteSvgViteSvgGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/vite.svg';
};

export type ViteSvgViteSvgGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ServeSpaFullPathGetData = {
    body?: never;
    path: {
        /**
         * Full Path
         */
        full_path: string;
    };
    query?: never;
    url: '/{full_path}';
};

export type ServeSpaFullPathGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ServeSpaFullPathGetError = ServeSpaFullPathGetErrors[keyof ServeSpaFullPathGetErrors];

export type ServeSpaFullPathGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type HealthApiHealthGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/health';
};

export type HealthApiHealthGetResponses = {
    /**
     * Response Health Api Health Get
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type HealthApiHealthGetResponse = HealthApiHealthGetResponses[keyof HealthApiHealthGetResponses];

export type UpUpGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/up';
};

export type UpUpGetResponses = {
    /**
     * Response Up Up Get
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type UpUpGetResponse = UpUpGetResponses[keyof UpUpGetResponses];

export type ClientOptions = {
    baseURL: 'http://localhost:8000' | (string & {});
};
